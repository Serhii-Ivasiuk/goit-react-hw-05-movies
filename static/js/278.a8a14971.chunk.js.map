{"version":3,"file":"static/js/278.a8a14971.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {data.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// Libs\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchValue = searchParams.get('query') ?? '';\n\n    setQuery(searchValue);\n  }, [searchParams]);\n\n  const handleChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          name=\"searchInput\"\n          onChange={handleChange}\n          value={query}\n        />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","// Libs\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n// Services\nimport { getMoviesByTitle } from '../../services/themoviedb-api';\n// Components\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchValue = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchValue) {\n      setMovies(null);\n      return;\n    }\n\n    setIsLoading(true);\n\n    getMoviesByTitle(searchValue)\n      .then(data => setMovies(data))\n      .finally(() => setIsLoading(false));\n  }, [searchValue]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const inputValue = evt.target.elements.searchInput.value\n      .trim()\n      .toLowerCase();\n\n    if (inputValue === '') {\n      toast.info('Please, enter yor search request.');\n      return;\n    }\n\n    setSearchParams({ query: inputValue });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n\n      {isLoading && <Loader />}\n\n      {movies && <MoviesList data={movies} />}\n\n      {movies?.length === 0 && (\n        <p>There is no movies matching your request: \"{searchValue}\"</p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCastById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["data","location","useLocation","map","id","title","to","state","from","onSubmit","useState","query","setQuery","useSearchParams","searchParams","useEffect","searchValue","get","type","name","onChange","evt","target","value","movies","setMovies","isLoading","setIsLoading","setSearchParams","getMoviesByTitle","then","finally","preventDefault","inputValue","elements","searchInput","trim","toLowerCase","toast","length","axios","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMovieDetailsById","movieId","path","getMovieCastById","cast","getMovieReviewsById"],"sourceRoot":""}