{"version":3,"file":"static/js/714.7d4c2173.chunk.js","mappings":"0MAAO,IAAMA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,YACAC,EAFuC,EAEvCA,MACAC,EAHuC,EAGvCA,aACAC,EAJuC,EAIvCA,aACAC,EALuC,EAKvCA,SACAC,EANuC,EAMvCA,OANuC,MAOlC,CACLJ,MAAAA,EACAG,SAAAA,EACAE,KAAMJ,EAAaK,OAAO,EAAG,GAC7BC,UAAU,GAAD,QAAqB,GAAfL,GAAmBM,QAAQ,GAAjC,KAETJ,OAAQA,EAAOK,OACXL,EAAOM,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,MACnC,2EAEJC,WAAYf,EAAW,0CACgBA,GACnC,sCAnBmC,C,oSCKzCgB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,0FACrB,sBADqB,SAGXT,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHV,cAG5BS,EAH4B,yBAK3BA,EAASC,KAAKC,SALa,2CAAH,qDAQpBC,EAAgB,mCAAG,WAAMC,GAAN,6EACjB,gBADiB,SAGPd,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2Ca,IAHpC,cAGxBJ,EAHwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,sDAQhBG,EAAmB,mCAAG,WAAMC,GAAN,gFAC3BC,EAD2B,iBACVD,GADU,SAGVhB,EAAAA,EAAAA,IAAA,UAAaiB,EAAb,YAAqBhB,IAHX,cAG3BS,EAH2B,0BAK1B3B,EAAAA,EAAAA,2BAA0B2B,EAASC,OALT,2CAAH,sDAQnBO,EAAgB,mCAAG,WAAMF,GAAN,gFACxBC,EADwB,iBACPD,EADO,qBAGPhB,EAAAA,EAAAA,IAAA,UAAaiB,EAAb,YAAqBhB,IAHd,cAGxBS,EAHwB,yBAKvBA,EAASC,KAAKQ,MALS,2CAAH,sDAQhBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,iBACVD,EADU,qBAGVhB,EAAAA,EAAAA,IAAA,UAAaiB,EAAb,YAAqBhB,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASC,KAAKC,SALY,2CAAH,qD","sources":["helpers/transformMovieDetailsData.js","services/themoviedb-api.js"],"sourcesContent":["export const transformMovieDetailsData = ({\n  poster_path,\n  title,\n  release_date,\n  vote_average,\n  overview,\n  genres,\n}) => ({\n  title,\n  overview,\n  year: release_date.substr(0, 4),\n  userScore: `${(vote_average * 10).toFixed(0)}%`,\n\n  genres: genres.length\n    ? genres.map(item => item.name).join(', ')\n    : \"Unfortunately, we don't have information about the genres of this movie.\",\n\n  posterPath: poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://via.placeholder.com/200x300',\n});\n","// Libs\nimport axios from 'axios';\n// Helpers\nimport { transformMovieDetailsData } from '../helpers/transformMovieDetailsData';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return transformMovieDetailsData(response.data);\n};\n\nexport const getMovieCastById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["transformMovieDetailsData","poster_path","title","release_date","vote_average","overview","genres","year","substr","userScore","toFixed","length","map","item","name","join","posterPath","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","data","results","getMoviesByTitle","query","getMovieDetailsById","movieId","path","getMovieCastById","cast","getMovieReviewsById"],"sourceRoot":""}