{"version":3,"file":"static/js/544.9e40b947.chunk.js","mappings":"+MA0CA,UAnCa,WACX,OAA4CA,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,IAEbI,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAI,OAAIR,EAAkBQ,EAAtB,IACTC,SAAQ,kBAAMP,GAAa,EAAnB,GACZ,GAAE,KAGD,gCACGD,IAAa,SAAC,IAAD,CAAYS,MAAM,YAE/BX,IAAmBE,IAClB,4BACE,wBAAI,oBACJ,wBACGF,EAAeY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMb,GAAzC,SACGU,KAFID,EADS,WAY/B,C,+LCtCDK,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICnB,EAAoB,mCAAG,0FACrB,sBADqB,SAGXW,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHV,cAG5BQ,EAH4B,yBAK3BA,EAASlB,KAAKmB,SALa,2CAAH,qDAQpBC,EAAgB,mCAAG,WAAMC,GAAN,6EACjB,gBADiB,SAGPZ,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2CW,IAHpC,cAGxBH,EAHwB,yBAKvBA,EAASlB,KAAKmB,SALS,2CAAH,sDAQhBG,EAAmB,mCAAG,WAAMC,GAAN,gFAC3BC,EAD2B,iBACVD,GADU,SAGVd,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BQ,EAH2B,yBAK1BA,EAASlB,MALiB,2CAAH,sDAQnByB,EAAmB,mCAAG,WAAMF,GAAN,gFAC3BC,EAD2B,iBACVD,EADU,qBAGVd,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BQ,EAH2B,yBAK1BA,EAASlB,KAAK0B,MALY,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,iBACVD,EADU,qBAGVd,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BQ,EAH2B,yBAK1BA,EAASlB,KAAKmB,SALY,2CAAH,qD","sources":["pages/Home/Home.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BeatLoader } from 'react-spinners';\n// Services\nimport { getDayTrendingMovies } from '../../services/themoviedb-api';\n\nconst Home = () => {\n  const [trandingMovies, setTrandingMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getDayTrendingMovies()\n      .then(data => setTrandingMovies(data))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {isLoading && <BeatLoader color=\"#36d7b7\" />}\n\n      {trandingMovies && !isLoading && (\n        <div>\n          <h1>Trending today</h1>\n          <ul>\n            {trandingMovies.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["useState","trandingMovies","setTrandingMovies","isLoading","setIsLoading","location","useLocation","useEffect","getDayTrendingMovies","then","data","finally","color","map","id","title","to","state","from","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","response","results","getMoviesByTitle","query","getMovieDetailsById","movieId","path","getMovieCreditsById","cast","getMovieReviewsById"],"sourceRoot":""}