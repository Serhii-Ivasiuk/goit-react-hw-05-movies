{"version":3,"file":"static/js/186.eb5fb6fa.chunk.js","mappings":"uMA0CA,UAnCgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IAEbI,EAAAA,EAAAA,IAAoBH,GACjBI,MAAK,SAAAC,GAAI,OAAIR,EAAgBQ,EAApB,IACTC,SAAQ,kBAAMP,GAAa,EAAnB,GACZ,GAAE,CAACC,KAGF,gCACGF,IAAa,SAAC,IAAD,CAAYS,MAAM,YAEN,KAAb,OAAZX,QAAY,IAAZA,OAAA,EAAAA,EAAcY,UACb,uBAAG,kDAGJZ,IACC,wBACGA,EAAaa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,yBAAG,WAASD,MACZ,uBAAIC,MAFGF,EADO,QAU3B,C,+LCtCDG,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,0FACrB,sBADqB,SAGXT,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHV,cAG5BS,EAH4B,yBAK3BA,EAASlB,KAAKmB,SALa,2CAAH,qDAQpBC,EAAgB,mCAAG,WAAMC,GAAN,6EACjB,gBADiB,SAGPb,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2CY,IAHpC,cAGxBH,EAHwB,yBAKvBA,EAASlB,KAAKmB,SALS,2CAAH,sDAQhBG,EAAmB,mCAAG,WAAM3B,GAAN,gFAC3B4B,EAD2B,iBACV5B,GADU,SAGVa,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASlB,MALiB,2CAAH,sDAQnBwB,EAAmB,mCAAG,WAAM7B,GAAN,gFAC3B4B,EAD2B,iBACV5B,EADU,qBAGVa,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASlB,KAAKyB,MALY,2CAAH,sDAQnB3B,EAAmB,mCAAG,WAAMH,GAAN,gFAC3B4B,EAD2B,iBACV5B,EADU,qBAGVa,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASlB,KAAKmB,SALY,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BeatLoader } from 'react-spinners';\n// Services\nimport { getMovieReviewsById } from '../../services/themoviedb-api';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieReviewsById(movieId)\n      .then(data => setMovieReviews(data))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <BeatLoader color=\"#36d7b7\" />}\n\n      {movieReviews?.length === 0 && (\n        <p>We don't have any reviews for this movie yet.</p>\n      )}\n\n      {movieReviews && (\n        <ul>\n          {movieReviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["useState","movieReviews","setMovieReviews","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieReviewsById","then","data","finally","color","length","map","id","author","content","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMoviesByTitle","query","getMovieDetailsById","path","getMovieCreditsById","cast"],"sourceRoot":""}