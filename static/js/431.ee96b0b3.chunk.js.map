{"version":3,"file":"static/js/431.ee96b0b3.chunk.js","mappings":"+JA8BA,UA3BiB,SAAC,GAAiD,IAAD,IAA9CA,KAAQC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,UAC9C,OACE,2BACE,gBACEC,IACEH,EAAY,0CAC2BA,GACnC,sCAENI,IAAG,UAAKH,GACRI,MAAM,MACNC,OAAO,SAET,uBAAIL,KACJ,uBAAIC,MAGT,C,qDCED,UAlBiB,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAClB,OACE,wBACGA,EAAKQ,KAAI,SAAAC,GAAI,OACZ,SAAC,UAAD,CAAwBT,KAAMS,GAAfA,EAAKC,GADR,KAKnB,C","sources":["components/CastItem/CastItem.jsx","components/CastList/CastList.jsx"],"sourcesContent":["// Libs\nimport PropTypes from 'prop-types';\n\nconst CastItem = ({ data: { profile_path, name, character } }) => {\n  return (\n    <li>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n            : 'https://via.placeholder.com/100x150'\n        }\n        alt={`${name}`}\n        width=\"100\"\n        height=\"150\"\n      />\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  );\n};\n\nCastItem.propTypes = {\n  data: PropTypes.shape({\n    profile_path: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default CastItem;\n","// Libs\nimport CastItem from 'components/CastItem/CastItem';\nimport PropTypes from 'prop-types';\n\nconst CastList = ({ data }) => {\n  return (\n    <ul>\n      {data.map(item => (\n        <CastItem key={item.id} data={item} />\n      ))}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default CastList;\n"],"names":["data","profile_path","name","character","src","alt","width","height","map","item","id"],"sourceRoot":""}