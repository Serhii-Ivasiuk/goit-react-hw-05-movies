{"version":3,"file":"static/js/544.942564da.chunk.js","mappings":"mLAmBA,UAhBmB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADD,KASf,C,uFCkBD,UA3Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IAEbE,EAAAA,EAAAA,wBACGC,MAAK,SAAAhB,GAAI,OAAIW,EAAUX,EAAd,IACTiB,SAAQ,kBAAMJ,GAAa,EAAnB,GACZ,GAAE,KAGD,gCACGD,IAAa,SAAC,UAAD,IAEbF,IACC,iCACE,wBAAI,oBAEJ,SAAC,UAAD,CAAYV,KAAMU,SAK3B,C,sRC/BDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICX,EAAoB,mCAAG,0FACrB,sBADqB,SAGXG,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHV,cAG5BQ,EAH4B,yBAK3BA,EAAS3B,KAAK4B,SALa,2CAAH,qDAQpBC,EAAgB,mCAAG,WAAMC,GAAN,6EACjB,gBADiB,SAGPZ,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2CW,IAHpC,cAGxBH,EAHwB,yBAKvBA,EAAS3B,KAAK4B,SALS,2CAAH,sDAQhBG,EAAmB,mCAAG,WAAMC,GAAN,gFAC3BC,EAD2B,iBACVD,GADU,SAGVd,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BQ,EAH2B,yBAK1BA,EAAS3B,MALiB,2CAAH,sDAQnBkC,EAAgB,mCAAG,WAAMF,GAAN,gFACxBC,EADwB,iBACPD,EADO,qBAGPd,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHd,cAGxBQ,EAHwB,yBAKvBA,EAAS3B,KAAKmC,MALS,2CAAH,sDAQhBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,iBACVD,EADU,qBAGVd,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BQ,EAH2B,yBAK1BA,EAAS3B,KAAK4B,SALY,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {data.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","// Libs\nimport { useEffect, useState } from 'react';\n// Services\nimport { getDayTrendingMovies } from '../../services/themoviedb-api';\n// Components\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getDayTrendingMovies()\n      .then(data => setMovies(data))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {movies && (\n        <>\n          <h1>Trending today</h1>\n\n          <MoviesList data={movies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCastById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["data","location","useLocation","map","id","title","to","state","from","useState","movies","setMovies","isLoading","setIsLoading","useEffect","getDayTrendingMovies","then","finally","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","response","results","getMoviesByTitle","query","getMovieDetailsById","movieId","path","getMovieCastById","cast","getMovieReviewsById"],"sourceRoot":""}