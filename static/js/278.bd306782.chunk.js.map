{"version":3,"file":"static/js/278.bd306782.chunk.js","mappings":"sMA6DA,UAvDe,WACb,OAA0CA,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAU,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAE3CD,IAELE,EAAAA,EAAAA,IAAiBF,GAAYG,MAAK,SAAAC,GAAI,OAAIT,EAAiBS,EAArB,GACvC,GAAE,CAACP,IAEJ,IAiBMQ,GAAkBC,EAAAA,EAAAA,MAExB,OACE,4BACE,kBAAMC,SArBW,SAAAC,GACnBA,EAAIC,iBAEJ,IAAMC,EAAaF,EAAIG,OAAOC,SAASC,YAAYC,MAChDC,OACAC,cAEgB,KAAfN,GAKJZ,EAAgB,CAAEmB,MAAOP,IAEzBF,EAAIG,OAAOO,SANTC,MAAM,iCAOT,EAMG,WACE,4BACE,kBAAOC,KAAK,OAAOC,KAAK,mBAE1B,mBAAQD,KAAK,SAAb,uBAGD1B,IACC,wBACGA,EAAc4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAOrB,EAA1B,SACGmB,KAFID,EADQ,QAW5B,C,+LCzDDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAM9B,EAAe,IAAI+B,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,0FACrB,sBADqB,SAGXR,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqB9B,IAHV,cAG5BuC,EAH4B,yBAK3BA,EAAShC,KAAKiC,SALa,2CAAH,qDAQpBnC,EAAgB,mCAAG,WAAMe,GAAN,6EACjB,gBADiB,SAGPU,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqB9B,EAArB,kBAA2CoB,IAHpC,cAGxBmB,EAHwB,yBAKvBA,EAAShC,KAAKiC,SALS,2CAAH,sDAQhBC,EAAmB,mCAAG,WAAMC,GAAN,gFAC3BC,EAD2B,iBACVD,GADU,SAGVZ,EAAAA,EAAAA,IAAA,UAAaa,EAAb,YAAqB3C,IAHX,cAG3BuC,EAH2B,yBAK1BA,EAAShC,MALiB,2CAAH,sDAQnBqC,EAAmB,mCAAG,WAAMF,GAAN,gFAC3BC,EAD2B,iBACVD,EADU,qBAGVZ,EAAAA,EAAAA,IAAA,UAAaa,EAAb,YAAqB3C,IAHX,cAG3BuC,EAH2B,yBAK1BA,EAAShC,KAAKsC,MALY,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,iBACVD,EADU,qBAGVZ,EAAAA,EAAAA,IAAA,UAAaa,EAAb,YAAqB3C,IAHX,cAG3BuC,EAH2B,yBAK1BA,EAAShC,KAAKiC,SALY,2CAAH,qD","sources":["pages/Movies/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n// Services\nimport { getMoviesByTitle } from '../../services/themoviedb-api';\n\nconst Movies = () => {\n  const [moviesByTitle, setMoviesByTitle] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query') ?? '';\n\n    if (!movieTitle) return;\n\n    getMoviesByTitle(movieTitle).then(data => setMoviesByTitle(data));\n  }, [searchParams]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const queryValue = evt.target.elements.searchInput.value\n      .trim()\n      .toLowerCase();\n\n    if (queryValue === '') {\n      alert('Please enter your search query');\n      return;\n    }\n\n    setSearchParams({ query: queryValue });\n\n    evt.target.reset();\n  };\n\n  const currentLocation = useLocation();\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" name=\"searchInput\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {moviesByTitle && (\n        <ul>\n          {moviesByTitle.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={currentLocation}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["useState","moviesByTitle","setMoviesByTitle","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","getMoviesByTitle","then","data","currentLocation","useLocation","onSubmit","evt","preventDefault","queryValue","target","elements","searchInput","value","trim","toLowerCase","query","reset","alert","type","name","map","id","title","to","state","axios","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMovieDetailsById","movieId","path","getMovieCreditsById","cast","getMovieReviewsById"],"sourceRoot":""}