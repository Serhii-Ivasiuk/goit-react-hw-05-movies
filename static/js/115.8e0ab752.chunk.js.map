{"version":3,"file":"static/js/115.8e0ab752.chunk.js","mappings":"wLAuCA,UA7BiB,SAAC,GAAiD,IAAD,IAA9CA,KAAQC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,UAC9C,OACE,UAAC,EAAAC,eAAD,YACE,SAAC,EAAAC,MAAD,CACEC,IACEL,EAAY,0CAC2BA,GACnC,sCAENM,IAAG,UAAKL,GACRM,MAAM,MACNC,OAAO,SAET,UAAC,EAAAC,cAAD,YACE,uBAAIR,KACJ,SAAC,EAAAS,UAAD,UAAYR,SAInB,C,sMC1BYC,EAAiBQ,EAAAA,EAAAA,GAAH,2JAQdP,EAAQO,EAAAA,EAAAA,IAAH,yDAKLF,EAAgBE,EAAAA,EAAAA,IAAH,yLAUbD,EAAYC,EAAAA,EAAAA,EAAH,0C,+DCFtB,UAlBiB,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KAClB,OACE,SAAC,EAAAa,eAAD,UACGb,EAAKc,KAAI,SAAAC,GAAI,OACZ,SAAC,UAAD,CAAwBf,KAAMe,GAAfA,EAAKC,GADR,KAKnB,C,0FCXYH,E,QAAiBD,EAAAA,GAAH,0J,uGCkC3B,UA5Ba,WACX,OAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IAEbI,EAAAA,EAAAA,kBAAiBH,GACdI,MAAK,SAAA1B,GAAI,OAAImB,EAAQnB,EAAZ,IACT2B,SAAQ,kBAAMN,GAAa,EAAnB,GACZ,GAAE,CAACC,KAGF,gCACGF,IAAa,SAAC,UAAD,IAEI,KAAb,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMU,UACL,uBAAG,2EAKJV,IAAQ,SAAC,UAAD,CAAUlB,KAAMkB,MAG9B,C,0RCjCDW,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,0FACrB,sBADqB,SAGXT,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHV,cAG5BS,EAH4B,yBAK3BA,EAASvC,KAAKwC,SALa,2CAAH,qDAQpBC,EAAgB,mCAAG,WAAMC,GAAN,6EACjB,gBADiB,SAGPb,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2CY,IAHpC,cAGxBH,EAHwB,yBAKvBA,EAASvC,KAAKwC,SALS,2CAAH,sDAQhBG,EAAmB,mCAAG,WAAMrB,GAAN,gFAC3BsB,EAD2B,iBACVtB,GADU,SAGVO,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASvC,MALiB,2CAAH,sDAQnByB,EAAgB,mCAAG,WAAMH,GAAN,gFACxBsB,EADwB,iBACPtB,EADO,qBAGPO,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHd,cAGxBS,EAHwB,yBAKvBA,EAASvC,KAAKkB,MALS,2CAAH,sDAQhB2B,EAAmB,mCAAG,WAAMvB,GAAN,gFAC3BsB,EAD2B,iBACVtB,EADU,qBAGVO,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASvC,KAAKwC,SALY,2CAAH,qD","sources":["components/CastItem/CastItem.jsx","components/CastItem/CastItem.styled.jsx","components/CastList/CastList.jsx","components/CastList/CastList.styled.jsx","pages/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport PropTypes from 'prop-types';\n// Styled components\nimport {\n  StyledCastItem,\n  Photo,\n  CharacterInfo,\n  Character,\n} from './CastItem.styled';\n\nconst CastItem = ({ data: { profile_path, name, character } }) => {\n  return (\n    <StyledCastItem>\n      <Photo\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n            : 'https://via.placeholder.com/100x150'\n        }\n        alt={`${name}`}\n        width=\"100\"\n        height=\"150\"\n      />\n      <CharacterInfo>\n        <p>{name}</p>\n        <Character>{character}</Character>\n      </CharacterInfo>\n    </StyledCastItem>\n  );\n};\n\nCastItem.propTypes = {\n  data: PropTypes.shape({\n    profile_path: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default CastItem;\n","// Libs\nimport styled from '@emotion/styled';\n\nexport const StyledCastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  border: 3px solid rgba(0, 0, 0, 0.15);\n  overflow: hidden;\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const CharacterInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  gap: 4px;\n  justify-content: space-between;\n  padding: 8px;\n  border-top: 3px solid #f05d22;\n`;\n\nexport const Character = styled.p`\n  color: #f05d22;\n`;\n","// Libs\nimport CastItem from 'components/CastItem/CastItem';\nimport PropTypes from 'prop-types';\n// Styled components\nimport { StyledCastList } from './CastList.styled';\n\nconst CastList = ({ data }) => {\n  return (\n    <StyledCastList>\n      {data.map(item => (\n        <CastItem key={item.id} data={item} />\n      ))}\n    </StyledCastList>\n  );\n};\n\nCastList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default CastList;\n","// Libs\nimport styled from '@emotion/styled';\n\nexport const StyledCastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 40px);\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  gap: 12px;\n`;\n","// Libs\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// Servises\nimport { getMovieCastById } from '../../services/themoviedb-api';\n// Components\nimport Loader from 'components/Loader/Loader';\nimport CastList from 'components/CastList/CastList';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieCastById(movieId)\n      .then(data => setCast(data))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {cast?.length === 0 && (\n        <p>\n          Unfortunately, we don't have information about the cast of this movie.\n        </p>\n      )}\n\n      {cast && <CastList data={cast} />}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCastById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["data","profile_path","name","character","StyledCastItem","Photo","src","alt","width","height","CharacterInfo","Character","styled","StyledCastList","map","item","id","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieCastById","then","finally","length","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMoviesByTitle","query","getMovieDetailsById","path","getMovieReviewsById"],"sourceRoot":""}