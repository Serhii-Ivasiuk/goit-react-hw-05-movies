{"version":3,"file":"static/js/247.aae247a7.chunk.js","mappings":"8LA8CA,UAxCa,WACX,OAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAgBM,EAApB,GACvC,GAAE,CAACL,KAGF,gCACGF,IACC,wBACGA,EAAaQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OAChB,2BACE,gBACEC,IACEF,EAAY,0CAC2BA,GACnC,sCAENG,IAAG,UAAKJ,GACRK,MAAM,MACNC,OAAO,SAET,uBAAIN,KACJ,uBAAIE,MAZGH,EADO,MAmBI,KAAb,OAAZT,QAAY,IAAZA,OAAA,EAAAA,EAAciB,UACb,mGAMP,C,+LC1CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,0FACrB,sBADqB,SAGXT,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHV,cAG5BS,EAH4B,yBAK3BA,EAASrB,KAAKsB,SALa,2CAAH,qDAQpBC,EAAgB,mCAAG,WAAMC,GAAN,6EACjB,gBADiB,SAGPb,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2CY,IAHpC,cAGxBH,EAHwB,yBAKvBA,EAASrB,KAAKsB,SALS,2CAAH,sDAQhBG,EAAmB,mCAAG,WAAM9B,GAAN,gFAC3B+B,EAD2B,iBACV/B,GADU,SAGVgB,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASrB,MALiB,2CAAH,sDAQnBF,EAAmB,mCAAG,WAAMH,GAAN,gFAC3B+B,EAD2B,iBACV/B,EADU,qBAGVgB,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASrB,KAAK2B,MALY,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMjC,GAAN,gFAC3B+B,EAD2B,iBACV/B,EADU,qBAGVgB,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASrB,KAAKsB,SALY,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// Servises\nimport { getMovieCreditsById } from '../../services/themoviedb-api';\n\nconst Cast = () => {\n  const [movieCredits, setMovieCredits] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCreditsById(movieId).then(data => setMovieCredits(data));\n  }, [movieId]);\n\n  return (\n    <>\n      {movieCredits && (\n        <ul>\n          {movieCredits.map(({ id, name, profile_path, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : 'https://via.placeholder.com/100x150'\n                }\n                alt={`${name}`}\n                width=\"100\"\n                height=\"150\"\n              />\n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {movieCredits?.length === 0 && (\n        <p>\n          Unfortunately, we don't have information about the cast of this film.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["useState","movieCredits","setMovieCredits","movieId","useParams","useEffect","getMovieCreditsById","then","data","map","id","name","profile_path","character","src","alt","width","height","length","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMoviesByTitle","query","getMovieDetailsById","path","cast","getMovieReviewsById"],"sourceRoot":""}