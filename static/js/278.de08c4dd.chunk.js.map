{"version":3,"file":"static/js/278.de08c4dd.chunk.js","mappings":"mLAmBA,UAhBmB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADD,KASf,C,+FCoDD,UA5De,WACb,OAA4BK,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAK,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAEtCD,GAKLL,GAAa,IAEbO,EAAAA,EAAAA,kBAAiBF,GACdG,MAAK,SAAArB,GAAI,OAAIW,EAAUX,EAAd,IACTsB,SAAQ,kBAAMT,GAAa,EAAnB,KARTF,EAAU,KASb,GAAE,CAACI,IAmBJ,OACE,iCACE,kBAAMQ,SAnBW,SAAAC,GACnBA,EAAIC,iBAEJ,IAAMC,EAAaF,EAAIG,OAAOC,SAASC,YAAYC,MAChDC,OACAC,cAEgB,KAAfN,GAKJV,EAAgB,CAAEE,MAAOQ,IAEzBF,EAAIG,OAAOM,SANTC,MAAM,iCAOT,EAIG,WACE,4BACE,kBAAOC,KAAK,OAAOC,KAAK,mBAE1B,mBAAQD,KAAK,SAAb,SAAsB,cAGvBvB,IAAa,SAAC,UAAD,IAEbF,IAAU,SAAC,UAAD,CAAYV,KAAMU,IAET,KAAb,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQ2B,UACP,yBAAG,8CAC2CtB,EAAaI,IAAI,SAAS,SAM/E,C,sRCjEDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMvB,EAAe,IAAIwB,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,0FACrB,sBADqB,SAGXR,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBvB,IAHV,cAG5BgC,EAH4B,yBAK3BA,EAAS/C,KAAKgD,SALa,2CAAH,qDAQpB5B,EAAgB,mCAAG,WAAMF,GAAN,6EACjB,gBADiB,SAGPoB,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBvB,EAArB,kBAA2CG,IAHpC,cAGxB6B,EAHwB,yBAKvBA,EAAS/C,KAAKgD,SALS,2CAAH,sDAQhBC,EAAmB,mCAAG,WAAMC,GAAN,gFAC3BC,EAD2B,iBACVD,GADU,SAGVZ,EAAAA,EAAAA,IAAA,UAAaa,EAAb,YAAqBpC,IAHX,cAG3BgC,EAH2B,yBAK1BA,EAAS/C,MALiB,2CAAH,sDAQnBoD,EAAgB,mCAAG,WAAMF,GAAN,gFACxBC,EADwB,iBACPD,EADO,qBAGPZ,EAAAA,EAAAA,IAAA,UAAaa,EAAb,YAAqBpC,IAHd,cAGxBgC,EAHwB,yBAKvBA,EAAS/C,KAAKqD,MALS,2CAAH,sDAQhBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,iBACVD,EADU,qBAGVZ,EAAAA,EAAAA,IAAA,UAAaa,EAAb,YAAqBpC,IAHX,cAG3BgC,EAH2B,yBAK1BA,EAAS/C,KAAKgD,SALY,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {data.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","// Libs\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// Services\nimport { getMoviesByTitle } from '../../services/themoviedb-api';\n// Components\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n\n    if (!query) {\n      setMovies(null);\n      return;\n    }\n\n    setIsLoading(true);\n\n    getMoviesByTitle(query)\n      .then(data => setMovies(data))\n      .finally(() => setIsLoading(false));\n  }, [searchParams]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const queryValue = evt.target.elements.searchInput.value\n      .trim()\n      .toLowerCase();\n\n    if (queryValue === '') {\n      alert('Please enter your search query');\n      return;\n    }\n\n    setSearchParams({ query: queryValue });\n\n    evt.target.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" name=\"searchInput\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {isLoading && <Loader />}\n\n      {movies && <MoviesList data={movies} />}\n\n      {movies?.length === 0 && (\n        <p>\n          There is no movies matching your request: \"{searchParams.get('query')}\n          \"\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCastById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["data","location","useLocation","map","id","title","to","state","from","useState","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","query","get","getMoviesByTitle","then","finally","onSubmit","evt","preventDefault","queryValue","target","elements","searchInput","value","trim","toLowerCase","reset","alert","type","name","length","axios","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMovieDetailsById","movieId","path","getMovieCastById","cast","getMovieReviewsById"],"sourceRoot":""}