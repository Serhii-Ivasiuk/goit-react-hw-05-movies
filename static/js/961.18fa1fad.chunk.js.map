{"version":3,"file":"static/js/961.18fa1fad.chunk.js","mappings":"sMAmEA,UA7DqB,WAAO,IAAD,EACzB,GAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAgB,WAFLC,EAAAA,EAAAA,MAEiBC,aAAZ,QAAqB,KAE3CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBN,GAASO,MAAK,SAAAC,GAAI,OAAIT,EAAgBS,EAApB,GACvC,GAAE,CAACR,IAMJ,OACEF,IACE,4BACE,SAAC,KAAD,CAAMW,GAAIP,EAAV,6BACA,4BACE,gBACEQ,IAAG,0CAAqCZ,EAAaa,aACrDC,IAAG,UAAKd,EAAae,MAAlB,iBACHC,MAAM,MACNC,OAAO,MACPC,QAde,SAAAC,GACvBA,EAAIC,OAAOR,IAAM,qCAClB,KAcO,0BACGZ,EAAae,MADhB,KACyBf,EAAaqB,aAAaC,OAAO,EAAG,GAD7D,QAGA,wCAA4C,GAA5BtB,EAAauB,aAA7B,oBACA,qCACA,uBAAIvB,EAAawB,YACjB,mCACA,2CAEF,mBAEA,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMb,GAAG,OAAOL,MAAOF,EAAvB,qBAIF,yBACE,SAAC,KAAD,CAAMO,GAAG,UAAUL,MAAOF,EAA1B,2BAKJ,mBAEA,SAAC,EAAAqB,SAAD,CAAUC,UAAU,+DAApB,UACE,SAAC,KAAD,QAKT,C,+LC/DDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,0FACrB,sBADqB,SAGXT,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHV,cAG5BS,EAH4B,yBAK3BA,EAAS3B,KAAK4B,SALa,2CAAH,qDAQpBC,EAAgB,mCAAG,WAAMC,GAAN,6EACjB,gBADiB,SAGPb,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2CY,IAHpC,cAGxBH,EAHwB,yBAKvBA,EAAS3B,KAAK4B,SALS,2CAAH,sDAQhB9B,EAAmB,mCAAG,WAAMN,GAAN,gFAC3BuC,EAD2B,iBACVvC,GADU,SAGVyB,EAAAA,EAAAA,IAAA,UAAac,EAAb,YAAqBb,IAHX,cAG3BS,EAH2B,yBAK1BA,EAAS3B,MALiB,2CAAH,sDAQnBgC,EAAmB,mCAAG,WAAMxC,GAAN,gFAC3BuC,EAD2B,iBACVvC,EADU,qBAGVyB,EAAAA,EAAAA,IAAA,UAAac,EAAb,YAAqBb,IAHX,cAG3BS,EAH2B,yBAK1BA,EAAS3B,KAAKiC,MALY,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAM1C,GAAN,gFAC3BuC,EAD2B,iBACVvC,EADU,qBAGVyB,EAAAA,EAAAA,IAAA,UAAac,EAAb,YAAqBb,IAHX,cAG3BS,EAH2B,yBAK1BA,EAAS3B,KAAK4B,SALY,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n// Srvices\nimport { getMovieDetailsById } from '../../services/themoviedb-api';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkLocation = location.state ?? '/';\n\n  useEffect(() => {\n    getMovieDetailsById(movieId).then(data => setMovieDetails(data));\n  }, [movieId]);\n\n  const handleImageError = evt => {\n    evt.target.src = 'https://via.placeholder.com/200x300';\n  };\n\n  return (\n    movieDetails && (\n      <div>\n        <Link to={backLinkLocation}>â¬… go back</Link>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n            alt={`${movieDetails.title} movie poster`}\n            width=\"200\"\n            height=\"300\"\n            onError={handleImageError}\n          />\n          <h1>\n            {movieDetails.title} ({movieDetails.release_date.substr(0, 4)})\n          </h1>\n          <p>User Score: {movieDetails.vote_average * 10}%------------</p>\n          <p>Overview</p>\n          <p>{movieDetails.overview}</p>\n          <p>Genres</p>\n          <p>-----------</p>\n        </div>\n        <hr />\n\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={backLinkLocation}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={backLinkLocation}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <hr />\n\n        <Suspense fallback={<div>Loading additional information...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["useState","movieDetails","setMovieDetails","movieId","useParams","backLinkLocation","useLocation","state","useEffect","getMovieDetailsById","then","data","to","src","poster_path","alt","title","width","height","onError","evt","target","release_date","substr","vote_average","overview","Suspense","fallback","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMoviesByTitle","query","path","getMovieCreditsById","cast","getMovieReviewsById"],"sourceRoot":""}