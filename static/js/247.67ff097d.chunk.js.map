{"version":3,"file":"static/js/247.67ff097d.chunk.js","mappings":"8LAuCA,UAjCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAApB,GACvC,GAAE,CAACR,IAEJ,IAAMS,EAAmB,SAAAC,GACvBA,EAAIC,OAAOC,IAAM,qCAClB,EAED,OACET,IACE,wBACGA,EAAaU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OAChB,2BACE,gBACEL,IAAG,0CAAqCG,GACxCG,IAAG,UAAKF,GACRG,MAAM,MACNC,OAAO,MACPC,QAASZ,KAEX,uBAAIO,KACJ,uBAAIC,MATGH,EADO,KAgBzB,C,+LCnCDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,0FACrB,sBADqB,SAGXT,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHV,cAG5BS,EAH4B,yBAK3BA,EAASxB,KAAKyB,SALa,2CAAH,qDAQpBC,EAAgB,mCAAG,WAAMC,GAAN,6EACjB,gBADiB,SAGPb,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2CY,IAHpC,cAGxBH,EAHwB,yBAKvBA,EAASxB,KAAKyB,SALS,2CAAH,sDAQhBG,EAAmB,mCAAG,WAAMpC,GAAN,gFAC3BqC,EAD2B,iBACVrC,GADU,SAGVsB,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASxB,MALiB,2CAAH,sDAQnBF,EAAmB,mCAAG,WAAMN,GAAN,gFAC3BqC,EAD2B,iBACVrC,EADU,qBAGVsB,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASxB,KAAK8B,MALY,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMvC,GAAN,gFAC3BqC,EAD2B,iBACVrC,EADU,qBAGVsB,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAHX,cAG3BS,EAH2B,yBAK1BA,EAASxB,KAAKyB,SALY,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["// Libs\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// Servises\nimport { getMovieCreditsById } from '../../services/themoviedb-api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  useEffect(() => {\n    getMovieCreditsById(movieId).then(data => setMovieCredits(data));\n  }, [movieId]);\n\n  const handleImageError = evt => {\n    evt.target.src = 'https://via.placeholder.com/100x150';\n  };\n\n  return (\n    movieCredits && (\n      <ul>\n        {movieCredits.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n              alt={`${name}`}\n              width=\"100\"\n              height=\"150\"\n              onError={handleImageError}\n            />\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","movieCredits","setMovieCredits","useEffect","getMovieCreditsById","then","data","handleImageError","evt","target","src","map","id","profile_path","name","character","alt","width","height","onError","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMoviesByTitle","query","getMovieDetailsById","path","cast","getMovieReviewsById"],"sourceRoot":""}