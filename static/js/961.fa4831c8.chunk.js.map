{"version":3,"file":"static/js/961.fa4831c8.chunk.js","mappings":"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","sources":["helpers/transformMovieDetailsData.js","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.jsx","services/themoviedb-api.js"],"sourcesContent":["export const transformMovieDetailsData = ({\n  poster_path,\n  title,\n  release_date,\n  vote_average,\n  overview,\n  genres,\n}) => ({\n  title,\n  overview,\n  year: release_date.substr(0, 4),\n  userScore: `${(vote_average * 10).toFixed(0)}%`,\n\n  genres: genres.length\n    ? genres.map(item => item.name).join(', ')\n    : \"Unfortunately, we don't have information about the genres of this movie.\",\n\n  posterPath: poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://via.placeholder.com/200x300',\n});\n","// Libs\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n// Services\nimport { getMovieDetailsById } from '../../services/themoviedb-api';\n// Components\nimport Loader from 'components/Loader/Loader';\n// Styled components\nimport {\n  Page,\n  MovieCard,\n  MoviePoster,\n  MovieInfo,\n  InfoTitle,\n  SubpagesLinkList,\n  StyledNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkLocation = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieDetailsById(movieId)\n      .then(data => setMovieDetails(data))\n      .catch(() => toast.error('Something went wrong, please try again later.'))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <Page>\n      {isLoading && <Loader />}\n\n      {movieDetails && (\n        <>\n          <StyledNavLink to={backLinkLocation}>â¬… go back</StyledNavLink>\n          <MovieCard>\n            <MoviePoster\n              src={movieDetails.posterPath}\n              alt={movieDetails.title}\n              width=\"200\"\n              height=\"300\"\n            />\n            <MovieInfo>\n              <h1>\n                {movieDetails.title} ({movieDetails.year})\n              </h1>\n              <p>User Score: {movieDetails.userScore}</p>\n              <InfoTitle>Overview</InfoTitle>\n              <p>{movieDetails.overview}</p>\n              <InfoTitle>Genres</InfoTitle>\n              <p>{movieDetails.genres}</p>\n            </MovieInfo>\n          </MovieCard>\n\n          <InfoTitle>Additional information</InfoTitle>\n          <SubpagesLinkList>\n            <li>\n              <StyledNavLink to=\"cast\" state={{ from: backLinkLocation }}>\n                Cast\n              </StyledNavLink>\n            </li>\n            <li>\n              <StyledNavLink to=\"reviews\" state={{ from: backLinkLocation }}>\n                Reviews\n              </StyledNavLink>\n            </li>\n          </SubpagesLinkList>\n        </>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Page>\n  );\n};\n\nexport default MovieDetails;\n","// Libs\nimport styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: block;\n  width: 140px;\n  text-align: center;\n  padding: 8px 20px;\n  border: 2px solid #153341;\n  border-radius: 8px;\n  text-transform: uppercase;\n  font-weight: 700;\n  transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    background-color: #0e222b;\n  }\n\n  &:hover,\n  &:focus {\n    color: #afe5e5;\n  }\n`;\n\nexport const MovieCard = styled.div`\n  overflow: hidden;\n  border: 3px solid rgba(0, 0, 0, 0.15);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  object-fit: cover;\n\n  @media screen and (max-width: 767.98px) {\n    width: 100%;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 20px;\n  border-top: 4px solid #f05d22;\n\n  @media screen and (min-width: 768px) {\n    border-top: 0;\n    border-left: 4px solid #f05d22;\n  }\n`;\n\nexport const InfoTitle = styled.div`\n  font-weight: 700;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #f05d22;\n`;\n\nexport const SubpagesLinkList = styled.ul`\n  display: flex;\n  gap: 12px;\n  padding: 8px 0;\n`;\n","// Libs\nimport axios from 'axios';\n// Helpers\nimport { transformMovieDetailsData } from '../helpers/transformMovieDetailsData';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'bdb5e5a669f604b5ce5232529fdedd0b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getDayTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return transformMovieDetailsData(response.data);\n};\n\nexport const getMovieCastById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n"],"names":["transformMovieDetailsData","poster_path","title","release_date","vote_average","overview","genres","year","substr","userScore","toFixed","length","map","item","name","join","posterPath","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","movieId","useParams","backLinkLocation","useLocation","state","from","useEffect","getMovieDetailsById","then","data","catch","toast","finally","Page","StyledNavLink","to","MovieCard","MoviePoster","src","alt","width","height","MovieInfo","InfoTitle","SubpagesLinkList","Suspense","fallback","styled","NavLink","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getDayTrendingMovies","response","results","getMoviesByTitle","query","path","getMovieCastById","cast","getMovieReviewsById"],"sourceRoot":""}